[ Web Application Firewall]
; comments begin with ';'
; for details see the BitFire wiki: https://github.com/bitslip6/bitfire/wiki

# BitFire PRO license key
pro_key = "unlicensed"

; enable or disable all firewall features
bitfire_enabled = true

; allow the firewall to blacklist misbevaving IPs for 10,60 or 1440 minutes
allow_ip_block = true

; send HTTP security headers
; https://securityheaders.com/
security_headers_enabled = true

; set an HSTS header for 1 year, will only allow browsers to connect via SSL.
; https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security
enforce_ssl_1year = "report"

; disable all website features except listed here
; format: allowed_featues[feature_name] = "policy" (self, *, or domain name)
; https://developer.mozilla.org/en-US/docs/Web/API/FeaturePolicy
feature_policy_enabled = false
allowed_features[notifications] = "self"
allowed_features[push] = "self"
allowed_features[geolocation] = "self"


[Input Filtering]
; enable filtering for malicious input (server side includes, etc) 
web_filter_enabled = block

; also decode html encoded input before inspection (good default)
decode_html = true

; block any request with spammy content like "100% free" "free gift", etc
spam_filter_enabled = report

; block cross site scripting attempts
xss_block = block

; block sql injection
sql_block = block

; generic web blocking, RCE, LFI, dot dot, etc
web_block = block

; inspect uploaded $_FILES for php content
file_block = block

; set to true will replace profanity with !@#$!
block_profanity = false

; filter logging for all these names (don't log passwords or credit card numbers) 
filtered_logging[cc] = true
filtered_logging[card] = true
filtered_logging[cardnumber] = true
filtered_logging[exp] = true
filtered_logging[expiration] = true
filtered_logging[cvv] = true
filtered_logging[cvv1] = true
filtered_logging[cvv2] = true
filtered_logging[pass] = true
filtered_logging[password] = true
filtered_logging[password1] = true
filtered_logging[password2] = true




; all allowed http verbs
allowed_methods[] = "GET"
allowed_methods[] = "OPTIONS"
allowed_methods[] = "POST"
allowed_methods[] = "PUT"
allowed_methods[] = "HEAD"


; block all unknown bots
whitelist_enable = true

; block only bots on the block list (set this to true will force whitelist_bots = false)
blacklist_enable = true

; if true, only browsers that accept cookies and run javascript will be allowed to connect
require_full_browser = true

; set the honeypot url configuration
honeypot_url = '/ztcegizz/contact'

; require a valid host header
check_domain = false
valid_domains[] = "localhost"
valid_domains[] = "127.0.0.1"

rate_limit = report
; verified request rate 1 minute : suggest 25
rr_1m = 25

; verified request rate 5 minute : suggest 50
rr_5m = 50


[System Configuration]
; the cache system to use preference order: (shm, apcu, shmop)
cache_type = 'nop'

report_file = 'cache/would_block.json'
block_file = 'cache/block.json'
debug_file = false; '/tmp/bitfire.debug.log'

; user confirmed tracking parameter - must be unique on the website
bitfire_param = '_kbuqyrkc'

; name of the cookie used to verify real browser interactions
browser_cookie = '_ltfc'

; block failure page
block_page = 'blocked.php'

; dashboard url
dashboard_path = "/bitfire"

; a system wide encryption key custom to this domain
encryption_key = 'PzYSeYq99o8iuzHny6YdsCT2'

; custom site secret
secret = 'RNQNeCaMExTKHPEI'

; dashboard password
password = 'change_me'

; show why request was blocked on block page
debug = true

; user_id of web user
web_uid = 33

; block http response code
response_code = 403

; the HTTP header to read for the remote address.  supported: 
; FORWARDED (suport for by=();for=();etc), X-FORWARDED-FOR, REMOTE_ADDR, CUSTOM (like x-forwarded-for)
ip_header = 'REMOTE_ADDR'

; dns_service can be cloudflair dns over https at 1.1.1.1 or local dns
dns_service = '1.1.1.1'

; short block time is 10 minutes
short_block_time = 600

; medium block time is 60 minutes
medium_block_time = 3600

; long block time is 24 hours
long_block_time = 86400
